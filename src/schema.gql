# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ArticleIdInput {
  articleId: String!
}

"""Article Schema"""
type ArticleSchema {
  blogUrl: String!
  createdBy: UserSchema!
  description: String!
  draftText: String!
  id: ID!
  imgUrl: String!
  isSubmitted: Boolean!
  likes: Float!
  score: Float!
  tags: [String!]!
  text: String!
  title: String!
}

input CreateArticleInput {
  blogUrl: String!
  description: String!
  tags: [String!]!
  text: String!
  title: String!
}

type JWTTokenResponseType {
  success: Boolean!
  token: String!
  user: UserSchema!
}

input LoginInputType {
  email: String!
  password: String!
}

type Mutation {
  """create a new article"""
  createArticle(input: CreateArticleInput!): ArticleSchema!

  """delete an existing article"""
  deleteArticle(input: ArticleIdInput!): Success!

  """login using email/password to obtain a JWT token"""
  login(input: LoginInputType!): JWTTokenResponseType!
  registerUser(email: String!, password: String!, username: String!): UserSchema!

  """update an existing article"""
  updateArticle(input: UpdateArticleInput!): ArticleSchema!
}

type PaginatedArticle {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Int!
  page: Int!
  prevPage: Int!
  results: [ArticleSchema!]!
  totalCount: Int!
  totalPages: Int!
}

input PaginationArgs {
  page: Int!
  pageSize: Int!
}

type PaginationInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Int!
  page: Int!
  prevPage: Int!
  totalCount: Int!
  totalPages: Int!
}

type PaginationType {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Int!
  page: Int!
  prevPage: Int!
  results: [ArticleSchema!]!
  totalCount: Int!
  totalPages: Int!
}

type Query {
  """get all articles"""
  allArticles(pageInfo: PaginationArgs): PaginatedArticle!
  checkActive: String!
  sample: String!
}

type Success {
  success: Boolean!
}

input UpdateArticleInput {
  blogUrl: String!
  id: ID!
  text: String!
  title: String!
}

"""User Schema"""
type UserSchema {
  email: String!
  id: ID!
  username: String!
}
